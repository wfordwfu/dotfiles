
## directories and path_variables ##

check_and_create_directory() {
    if [ ! -d "$1" ]; then
        echo "creating $1"
        mkdir -p "$1"
    fi
}

local=$(pwd)/.local
state=${local}/state


declare -A env_paths=(
    ["TEMP_PATH"]="${state}/temp"
    ["DATA_PATH"]="${state}/data"
    ["DB_PATH"]="${state}/db"
)

# Loop through the environment variables and paths
for env_var in "${!env_paths[@]}"; do
    # Assign environment variable
    export "$env_var"="${env_paths[$env_var]}"
    # Check and create directory if it doesn't exist
    check_and_create_directory "${env_paths[$env_var]}"
done

## direnv ##

if [ ! -f "local.envrc" ]; then
    touch local.envrc
    echo "please use local.envrc for modifications"
fi

## watchman ##

source ${HOME}/.config/projects/watchman_utils.sh

if command -v watchman &> /dev/null; then
  create_watchmanconfig
  watchman watch-project .
  watchman -- trigger . update-watchmanconfig local.watchmanconfig -- bash -c 'source "$HOME/.config/projects/watchman_utils.sh" && create_watchmanconfig'
  watchman -- trigger . update-envrc local.envrc -- bash -c 'cat $HOME/.config/projects/user.envrc local.envrc > .envrc'
else
  echo "watchman not found.  Skipping configuration"
fi


## local env variables ##

if [ ! -f .env ] && [ -f example.env ]; then
    echo "Generating .env from example.env"
    cp example.env .env
    echo "Please update the .env file with correct values and restart the shell"
fi

dotenv_if_exists
