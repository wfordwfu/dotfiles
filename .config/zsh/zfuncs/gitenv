#!/usr/bin/env zsh
# set gitenv
#echo "Initialize gitenv"

gitenv() {
    if command -v git &> /dev/null; then
      echo "Git found. Checking for Configuation."
      if [ ! -f ${XDG_CONFIG_HOME}/git/config ]; then
        echo "###############################################"
        echo "Building Git Configuration"
        echo "###############################################"
        mkdir -p ${XDG_CONFIG_HOME}/git
        envsubst < ${XDG_CONFIG_HOME}/git/config_template > ${XDG_CONFIG_HOME}/git/config
        if command -v gh &> /dev/null; then
          gh auth status
          if [ $? -eq 0 ]; then
            cat <<EOF >>${XDG_CONFIG_HOME}/git/config
[user]
  name = $(gh api user --jq '.name')
  email = $(gh api user --jq '(.id | tostring) + "+" + .login + "@users.noreply.github.com"')
[alias]
  initFull = !sh ${XDG_CONFIG_HOME}/git/scripts/initFull.sh
  bleach = !sh ${XDG_CONFIG_HOME}/git/scripts/bleach.sh
  amend = commit -a --amend -C HEAD
  contains = branch --contains
  hist = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --branches
  
EOF
          
          else
            echo "There's a problem connecting to gh cli"
          fi
        else
          echo "Please install gh cli"
        fi
      fi
    else
      echo "Please check your system. Git does not appear to be installed."
    fi
}
# end set gitenv

_git_dir() {
  local git_cmd
  if [ "${PWD}" = "${HOME}" ]; then
    git_cmd="$(which git) --git-dir=${HOME}/.cfg/ --work-tree=${HOME}"
  else
    git_cmd="$(which git)"
  fi
  echo $git_cmd
}
# end getdir

add_untracked() {
  local git_cmd=$(_git_dir)
  local ls_cmd="$git_cmd ls-files --others --full-name --exclude-standard --exclude='go/*' --exclude='.vscode-server/*' --exclude='.npm/*' --exclude='.m2/*' --exclude='.local/state/*' --exclude='.local/share/*' --exclude='.cache/*' --exclude='.kube/*' --exclude='code/*' --"
  local files_to_add=$(eval $ls_cmd | xargs -I {} bash -c '[ ! -L "{}" ] && echo "{}"' | fzf --multi --preview "bat {} --color=always")
  eval "$git_cmd add $files_to_add"
}

